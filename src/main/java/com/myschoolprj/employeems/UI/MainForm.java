package com.myschoolprj.employeems.UI;

import com.myschoolprj.employeems.Barchart;
import com.myschoolprj.employeems.utils.Validator;
import com.myschoolprj.employeems.utils.GradientPanels;
import com.myschoolprj.employeems.utils.jPanelGradient2;
import com.myschoolprj.employeems.utils.PlaceholderUtils;
import com.myschoolprj.employeems.dao.EmployeeDAO;
import com.myschoolprj.employeems.utils.connectDB;

import java.io.FileInputStream;
import java.io.File;
import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Date;
import java.text.*;

import com.myschoolprj.employeems.model.Employee;
import java.awt.Color;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MainForm extends javax.swing.JFrame {

    private EmployeeDAO emDAO;

    public MainForm() {
        initComponents();

        // Khởi tạo đối tượng EmployeeDAO
        try {
            emDAO = new EmployeeDAO(); // Khởi tạo EmployeeDAO

            // Khởi tạo đối tượng count_em từ EmployeeDAO và truyền JLabel vào
            EmployeeDAO.count_em countEmployee = emDAO.new count_em(total, total_staff, total_leader);
            countEmployee.TotalEmployee(); // Gọi phương thức TotalEmployee để lấy tổng số nhân viên và cập nhật JLabel
            countEmployee.TotalEmployeeWithRole(1); // Đếm nhân viên có role_id = 1
            countEmployee.TotalEmployeeWithRole(2); // Đếm nhân viên có role_id = 1

        } catch (SQLException e) {
            e.printStackTrace(); // Xử lý ngoại lệ nếu có lỗi kết nối cơ sở dữ liệu
        }

        // tải data từ db lên bảng
        try {
            emDAO = new EmployeeDAO();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Failed to connect to the database. Please try again later", "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        loadDataIntoTable();

        // Khởi tạo Barchart
        Barchart barchart = new Barchart();
        jPanel10.setLayout(new BorderLayout()); // Đặt layout cho jPanel7

        jPanel10.add(barchart, BorderLayout.CENTER); // Thêm biểu đồ vào jPanel7
        jPanel10.setPreferredSize(new Dimension(600, 300)); // Đặt kích thước cho jPanel7
        jPanel10.revalidate(); // Cập nhật lại panel
        jPanel10.repaint(); // Vẽ lại panel
    }

    private void resetForm() {
        txtEmployeeID.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtPhone.setText("");
        cbPosition.setSelectedIndex(-1);
        cbRole.setSelectedIndex(-1);
        cbGender.setSelectedIndex(-1);
        cbAddress.setSelectedIndex(-1);
        jDate.setDate(null);
    }

    private void loadDataIntoTable() {
        try {
            // Gọi phương thức từ EmployeeDAO để lấy danh sách nhân viên
            ArrayList<Employee> employees = emDAO.readEmployees();

            // Lấy model của JTable
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Xóa tất cả các hàng hiện có trong bảng

            // Duyệt qua danh sách nhân viên và thêm dữ liệu vào bảng
            for (Employee employee : employees) {
                // Kiểm tra và xử lý ngày tháng nếu null
                String dobStr = (employee.getDob() != null)
                        ? new SimpleDateFormat("dd/MM/yyyy").format(employee.getDob())
                        : "N/A"; // Gán "N/A" nếu ngày tháng null

                // Thêm một hàng mới vào bảng
                Object[] rowData = {
                    employee.getID(), // ID nhân viên
                    employee.getFirstName(), // Tên
                    employee.getLastName(), // Họ
                    employee.getPhone(), // Số điện thoại
                    employee.getGender(), // Giới tính
                    dobStr, // Ngày sinh
                    employee.getAddress(), // Địa chỉ
                    employee.getRole(), // Tên Role
                    employee.getPosition(), // Tên Position
                };

                model.addRow(rowData); // Thêm hàng vào JTable
            }
        } catch (Exception e) {
            // Hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        closeMainBtn = new javax.swing.JButton();
        jPanel2 = new GradientPanels(Color.decode("#272b3f"), Color.decode("#256b51"));
        jButton1 = new javax.swing.JButton();
        Logout_button = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        javax.swing.JButton home_button = new javax.swing.JButton();
        add_button = new javax.swing.JButton();
        salary_button = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new jPanelGradient2(20, Color.cyan, Color.DARK_GRAY, Color.BLACK);
        jLabel5 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new jPanelGradient2(20, Color.cyan, Color.DARK_GRAY, Color.BLACK);
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        total_leader = new javax.swing.JLabel();
        jPanel9 = new jPanelGradient2(20, Color.cyan, Color.DARK_GRAY, Color.BLACK);
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        total_staff = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        searchTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblStatus = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        cbAddress = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox<>();
        bttnClear = new javax.swing.JButton();
        bttnAdd = new javax.swing.JButton();
        bttnUpdate = new javax.swing.JButton();
        bttnDelete = new javax.swing.JButton();
        jDate = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        cbRole = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cbPosition = new javax.swing.JComboBox<>();
        bttn_import = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        updateSalaryBtn = new javax.swing.JButton();
        txt_s1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        calculateBtn = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        firstnameTF = new javax.swing.JTextField();
        lastnameTF = new javax.swing.JTextField();
        coefTF = new javax.swing.JTextField();
        allowanceTF = new javax.swing.JTextField();
        baseSalaryTF = new javax.swing.JTextField();
        netSalaryTF = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_salary = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1140, 500));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Employee Management System  ");

        closeMainBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-x-24.png"))); // NOI18N
        closeMainBtn.setBorder(null);
        closeMainBtn.setBorderPainted(false);
        closeMainBtn.setContentAreaFilled(false);
        closeMainBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeMainBtn.setFocusPainted(false);
        closeMainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMainBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeMainBtn)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(closeMainBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(0, 153, 102));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-logout-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Logout_button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Logout_button.setForeground(new java.awt.Color(255, 255, 255));
        Logout_button.setText("Logout");

        jPanel8.setPreferredSize(new java.awt.Dimension(159, 117));
        jPanel8.setOpaque(false);

        home_button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        home_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home-icon.png"))); // NOI18N
        home_button.setText("Home ");
        home_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_buttonActionPerformed(evt);
            }
        });

        add_button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pluss-icon.png"))); // NOI18N
        add_button.setText("Add Employee");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        salary_button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        salary_button.setForeground(new java.awt.Color(0, 0, 0));
        salary_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money-icon.png"))); // NOI18N
        salary_button.setText("Salary ");
        salary_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salary_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(home_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(add_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
            .addComponent(salary_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(home_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(add_button)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(salary_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel19.setBorder(BorderFactory.createMatteBorder(0, 0, 3, 0, Color.WHITE));
        jPanel19.setOpaque(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-user-100 (1).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("               Welcome");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("                 Admin");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(0, 44, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Logout_button)
                        .addGap(8, 8, 8)))
                .addGap(18, 18, 18))
        );

        jPanel3.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user-icon-50px.png"))); // NOI18N

        total.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setText("0");
        total.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                totalAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total Employees");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 112, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Leader");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus-icon2.png"))); // NOI18N

        total_leader.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        total_leader.setForeground(new java.awt.Color(255, 255, 255));
        total_leader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total_leader.setText("0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(total_leader, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(total_leader, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Staff");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/minus-icon.png"))); // NOI18N

        total_staff.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        total_staff.setForeground(new java.awt.Color(255, 255, 255));
        total_staff.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total_staff.setText("0");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 128, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(99, 99, 99))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addComponent(total_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(total_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel10.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel4, "tab1");

        jPanel12.setBorder(new com.myschoolprj.employeems.utils.border(5,1)); // Thay đổi bán kính bo góc nếu cần
        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setForeground(new java.awt.Color(0, 0, 0));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-search-26.png"))); // NOI18N

        searchTF.setForeground(new java.awt.Color(153, 153, 153));
        searchTF.setText("Search");
        searchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTFFocusLost(evt);
            }
        });
        searchTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTFActionPerformed(evt);
            }
        });
        searchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTFKeyReleased(evt);
            }
        });

        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First name", "Last name", "Phone #", "Gender", "Date of birth", "Address", "Role", "Position"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(25);
        }

        lblStatus.setText("Status: Add/ Update");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, Short.MAX_VALUE)
                .addComponent(lblStatus)
                .addGap(121, 121, 121))
            .addComponent(jScrollPane1)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel13.setBorder(new com.myschoolprj.employeems.utils.border(5,3)); // Thay đổi bán kính bo góc nếu cần
        jPanel13.setForeground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Employee ID:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Phone #:");

        cbAddress.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "An Giang", "Ba Ria - Vung Tau", "Bac Lieu", "Bac Giang", "Bac Kan", "Bac Ninh", "Ben Tre", "Binh Duong", "Binh Dinh", "Binh Phuoc", "Binh Thuan", "Ca Mau", "Cao Bang", "Can Tho", "Da Nang", "Dak Lak", "Dak Nong", "Dien Bien", "Dong Nai", "Dong Thap", "Gia Lai", "Ha Giang", "Ha Nam", "Ha Noi", "Ha Tinh", "Hai Duong", "Hai Phong", "Hau Giang", "Hoa Binh", "Hung Yen", "Khanh Hoa", "Kien Giang", "Kon Tum", "Lai Chau", "Lang Son", "Lao Cai", "Lam Dong", "Long An", "Nam Dinh", "Nghe An", "Ninh Binh", "Ninh Thuan", "Phu Tho", "Phu Yen", "Quang Binh", "Quang Nam", "Quang Ngai", "Quang Ninh", "Quang Tri", "Soc Trang", "Son La", "Tay Ninh", "Thai Binh", "Thai Nguyen", "Thanh Hoa", "Thua Thien Hue", "Tien Giang", "TP Ho Chi Minh", "Tra Vinh", "Tuyen Quang", "Vinh Long", "Vinh Phuc", "Yen Bai" }));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Address:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("First name:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Last name:");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Gender:");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        bttnClear.setText("Clear");
        bttnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnClearActionPerformed(evt);
            }
        });

        bttnAdd.setText("Add");
        bttnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAddActionPerformed(evt);
            }
        });

        bttnUpdate.setText("Update");
        bttnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnUpdateActionPerformed(evt);
            }
        });

        bttnDelete.setText("Delete");
        bttnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnDeleteActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel29.setText("Date:");

        cbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Staff", "Leader" }));
        cbRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRoleActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setText("Role:");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel34.setText("Position:");

        cbPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Software Developer", "Tester/QA" }));
        cbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPositionActionPerformed(evt);
            }
        });

        bttn_import.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-file-32.png"))); // NOI18N
        bttn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttn_importActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bttnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bttnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(18, 18, 18)
                                .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)))
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel13Layout.createSequentialGroup()
                                            .addComponent(jLabel16)
                                            .addGap(12, 12, 12)
                                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                            .addComponent(jLabel29)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(bttnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bttnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(82, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bttn_import))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(bttn_import)))
                .addGap(23, 23, 23)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(jLabel29))
                    .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))))
                .addGap(59, 59, 59)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel3.add(jPanel11, "tab2");

        jPanel16.setBorder(new com.myschoolprj.employeems.utils.border(5,1)); // Thay đổi bán kính bo góc nếu cần

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("First name:");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Last name:");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Coef:");

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        updateSalaryBtn.setText("Update");

        txt_s1.setText("Search");
        txt_s1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_s1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_s1FocusLost(evt);
            }
        });
        txt_s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_s1ActionPerformed(evt);
            }
        });
        txt_s1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_s1KeyReleased(evt);
            }
        });

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-search-26.png"))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("ID:");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Allowance:");

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("BASE $:");

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("NET $:");

        calculateBtn.setText("Calculate");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cash (1).png"))); // NOI18N

        idTF.setEditable(false);
        idTF.setPreferredSize(new java.awt.Dimension(73, 30));

        firstnameTF.setEditable(false);
        firstnameTF.setPreferredSize(new java.awt.Dimension(73, 30));

        lastnameTF.setEditable(false);
        lastnameTF.setPreferredSize(new java.awt.Dimension(73, 30));

        coefTF.setPreferredSize(new java.awt.Dimension(73, 30));

        allowanceTF.setPreferredSize(new java.awt.Dimension(73, 30));

        baseSalaryTF.setPreferredSize(new java.awt.Dimension(73, 30));

        netSalaryTF.setPreferredSize(new java.awt.Dimension(73, 30));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(72, 72, 72))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(updateSalaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_s1))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel16Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lastnameTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel16Layout.createSequentialGroup()
                                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel27)
                                            .addComponent(jLabel31)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel32)
                                            .addComponent(jLabel33))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(calculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(idTF, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                            .addComponent(firstnameTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(coefTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(allowanceTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(baseSalaryTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(netSalaryTF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(txt_s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(lastnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coefTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allowanceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(calculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baseSalaryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(netSalaryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateSalaryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel18.setBorder(new com.myschoolprj.employeems.utils.border(5,1)); // Thay đổi bán kính bo góc nếu cần
        jPanel18.setLayout(null);

        tbl_salary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "First name", "Last name", "Coef", "Allowance", "Base Salary $", "Net Salary $"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_salary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_salaryMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_salary);

        jPanel18.add(jScrollPane3);
        jScrollPane3.setBounds(10, 10, 630, 540);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.add(jPanel15, "tab3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        idTF.setText("");
        firstnameTF.setText("");
        lastnameTF.setText("");
        coefTF.setText("");
        allowanceTF.setText("");
        baseSalaryTF.setText("");
        netSalaryTF.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void cbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPositionActionPerformed

    private void closeMainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMainBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeMainBtnActionPerformed

    private void bttnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAddActionPerformed
        // Lấy dữ liệu từ các trường nhập liệu
        try {
            StringBuilder sb = new StringBuilder();

            Validator.checkEmptyFields(txtEmployeeID, sb, "Employee cannot be blank!");
            Validator.checkEmptyFields(txtFirstName, sb, "First name cannot be blank!");
            Validator.checkEmptyFields(txtLastName, sb, "Last name cannot be blank!");
            Validator.checkValidPhone(txtPhone, sb);
            Validator.checkEmptyComboBoxes(cbGender, sb, "Gender cannot be blank!");
            Validator.checkEmptyComboBoxes(cbAddress, sb, "Address cannot be blank!");
            Validator.checkEmptyComboBoxes(cbRole, sb, "Role cannot be blank!");
            Validator.checkEmptyComboBoxes(cbPosition, sb, "Title cannot be blank!");
            boolean AgeValid = Validator.checkValidDOB(jDate, sb);

            if (sb.length() > 0) {
                JOptionPane.showMessageDialog(this, sb.toString(), "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Date date = jDate.getDate();
            String dateStr = "";

            if (date != null) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                dateStr = dateFormat.format(date);
            }

            Employee newEmployee = new Employee();
            EmployeeDAO xFile = new EmployeeDAO();
            ArrayList<Employee> employees = new ArrayList<>();
            employees.add(newEmployee);

            String roleID = xFile.getRoleIDByName(cbRole.getSelectedItem().toString().trim());
            String positionID = xFile.getPositionIDByName(cbPosition.getSelectedItem().toString().trim());

            // Kiểm tra nếu không tìm thấy
            if (roleID == null) {
                JOptionPane.showMessageDialog(this, "Role does not exist in the database!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (positionID == null) {
                JOptionPane.showMessageDialog(this, "Position does not exist in the database!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String employeeID = txtEmployeeID.getText().trim();
            String firstName = txtFirstName.getText().trim();
            String lastName = txtLastName.getText().trim();
            String gender = cbGender.getSelectedItem().toString().trim();
            String roles = cbRole.getSelectedItem().toString().trim();

            String phone = txtPhone.getText().trim();
            String address = cbAddress.getSelectedItem().toString().trim();
            String position = cbPosition.getSelectedItem().toString().trim();
            float salary = 0;

            // lưu thông tin vào đối tượng newEmployees đã tạo
            newEmployee.setID(txtEmployeeID.getText().trim());
            newEmployee.setFirstName(txtFirstName.getText().trim());
            newEmployee.setLastName(txtLastName.getText().trim());
            newEmployee.setPhone(txtPhone.getText().trim());
            newEmployee.setGender(cbGender.getSelectedItem().toString().trim());
            newEmployee.setDob(jDate.getDate());
            newEmployee.setAddress(cbAddress.getSelectedItem().toString().trim());
            newEmployee.setRole(roleID); // Lưu role_id
            newEmployee.setPosition(positionID); // Lưu pos_id

            // khoi tao EmployeeDAO de ghi du lieu
            xFile.writeEmployee(employees);

            Object[] EmployeerowData = {employeeID, firstName, lastName, phone, gender, dateStr, address, roles, position};
            // Thêm dữ liệu vào bảng
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel(); // Lấy tableModel từ jTable1
            model1.addRow(EmployeerowData); // Thêm hàng mới vào tableModel

            resetForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        lblStatus.setText("Status: Add new");

    }//GEN-LAST:event_bttnAddActionPerformed

    private void cbRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRoleActionPerformed

    private void bttnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnUpdateActionPerformed

        // TODO add your handling code here:
        try {
            StringBuilder sb = new StringBuilder();

            // Kiểm tra các trường nhập liệu
            Validator.checkEmptyFields(txtEmployeeID, sb, "Employee ID cannot be blank!");
            Validator.checkEmptyFields(txtFirstName, sb, "First name cannot be blank!");
            Validator.checkEmptyFields(txtLastName, sb, "Last name cannot be blank!");
            Validator.checkValidPhone(txtPhone, sb);
            Validator.checkEmptyComboBoxes(cbGender, sb, "Gender cannot be blank!");
            Validator.checkEmptyComboBoxes(cbAddress, sb, "Address cannot be blank!");
            Validator.checkEmptyComboBoxes(cbRole, sb, "Role cannot be blank!");
            Validator.checkEmptyComboBoxes(cbPosition, sb, "Position cannot be blank!");
            boolean isAgeValid = Validator.checkValidDOB(jDate, sb);

            if (sb.length() > 0) {
                JOptionPane.showMessageDialog(this, sb.toString(), "Input Error", JOptionPane.ERROR_MESSAGE);
                return; // Dừng thực hiện nếu có lỗi
            }

            // Lấy ngày từ jDate
            Date date = jDate.getDate();
            String dateStr = "";
            if (date != null) {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                dateStr = dateFormat.format(date);
            }

            // Lấy Role ID và Position ID
            EmployeeDAO xFile = new EmployeeDAO();
            String roleID = xFile.getRoleIDByName(cbRole.getSelectedItem().toString().trim());
            String positionID = xFile.getPositionIDByName(cbPosition.getSelectedItem().toString().trim());

            // Kiểm tra tính hợp lệ của Role ID và Position ID
            if (roleID == null || positionID == null) {
                JOptionPane.showMessageDialog(this, "Invalid Role or Position!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Tạo đối tượng Employee và gán giá trị
            Employee updatedEmployee = new Employee();
            updatedEmployee.setID(txtEmployeeID.getText().trim());
            updatedEmployee.setFirstName(txtFirstName.getText().trim());
            updatedEmployee.setLastName(txtLastName.getText().trim());
            updatedEmployee.setPhone(txtPhone.getText().trim());
            updatedEmployee.setGender(cbGender.getSelectedItem().toString().trim());
            updatedEmployee.setDob(date);
            updatedEmployee.setAddress(cbAddress.getSelectedItem().toString().trim());
            updatedEmployee.setRole(roleID);
            updatedEmployee.setPosition(positionID);

            // Cập nhật trong cơ sở dữ liệu
            xFile.updateEmployee(updatedEmployee);

            // Cập nhật dữ liệu trong JTable
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setValueAt(txtEmployeeID.getText().trim(), selectedRow, 0);
                model.setValueAt(txtFirstName.getText().trim(), selectedRow, 1);
                model.setValueAt(txtLastName.getText().trim(), selectedRow, 2);
                model.setValueAt(txtPhone.getText().trim(), selectedRow, 3);
                model.setValueAt(cbGender.getSelectedItem().toString().trim(), selectedRow, 4);
                model.setValueAt(dateStr, selectedRow, 5);
                model.setValueAt(cbAddress.getSelectedItem().toString().trim(), selectedRow, 6);
                model.setValueAt(cbRole.getSelectedItem().toString().trim(), selectedRow, 7);
                model.setValueAt(cbPosition.getSelectedItem().toString().trim(), selectedRow, 8);

                JOptionPane.showMessageDialog(this, "Employee updated successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row to update!", "Update Error",
                        JOptionPane.WARNING_MESSAGE);
            }

            // Xóa dữ liệu trong các trường nhập sau khi cập nhật
            resetForm();
            lblStatus.setText("Status: Updated");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bttnUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        // Hiển thị trạng thái "Update"
        lblStatus.setText("Status: Update");

        // Lấy hàng được chọn trong JTable
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ từng cột của hàng được chọn
            String employeeID = jTable1.getValueAt(selectedRow, 0).toString(); // Employee ID
            String firstName = jTable1.getValueAt(selectedRow, 1).toString(); // First Name
            String lastName = jTable1.getValueAt(selectedRow, 2).toString();  // Last Name
            String phone = jTable1.getValueAt(selectedRow, 3).toString();     // Phone
            String gender = jTable1.getValueAt(selectedRow, 4).toString();   // Gender
            String dateStr = jTable1.getValueAt(selectedRow, 5).toString();  // Date of Birth
            String address = jTable1.getValueAt(selectedRow, 6).toString();  // Address
            String roleName = jTable1.getValueAt(selectedRow, 7).toString(); // Role Name
            String positionName = jTable1.getValueAt(selectedRow, 8).toString(); // Position Name

            // Điền dữ liệu vào các trường nhập liệu
            txtEmployeeID.setText(employeeID);
            txtFirstName.setText(firstName);
            txtLastName.setText(lastName);
            txtPhone.setText(phone);
            cbGender.setSelectedItem(gender);
            cbAddress.setSelectedItem(address);

            // Chuyển đổi tên Role và Position thành ID nếu cần
            try {
                String roleID = emDAO.getRoleIDByName(roleName);
                String positionID = emDAO.getPositionIDByName(positionName);
                cbRole.setSelectedItem(roleName); // Hiển thị tên Role trong ComboBox
                cbPosition.setSelectedItem(positionName); // Hiển thị tên Position trong ComboBox
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error fetching Role/Position: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Chuyển đổi chuỗi ngày sang kiểu Date
            try {
                Date date = new SimpleDateFormat("dd/MM/yyyy").parse(dateStr);
                jDate.setDate(date); // Điền ngày vào JDateChooser
            } catch (ParseException e) {
                e.printStackTrace(); // Xử lý lỗi nếu ngày không hợp lệ
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void bttnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnClearActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_bttnClearActionPerformed

    private void bttnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnDeleteActionPerformed
        // TODO add your handling code here:
        // Lấy chỉ số hàng được chọn trong bảng
        int selectedRow = jTable1.getSelectedRow();

        // Kiểm tra xem có hàng nào được chọn không
        if (selectedRow >= 0) {
            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?",
                    "Confirm Delete", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Lấy Employee ID từ hàng đã chọn
                String employeeID = jTable1.getValueAt(selectedRow, 0).toString(); // Giả sử ID ở cột đầu tiên

                // Xóa bản ghi khỏi DefaultTableModel (hiển thị trên giao diện)
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.removeRow(selectedRow);

                // Xóa bản ghi khỏi cơ sở dữ liệu
                try {
                    EmployeeDAO employeeDAO = new EmployeeDAO(); // Tạo đối tượng EmployeeDAO
                    employeeDAO.deleteEmployee(employeeID); // Gọi phương thức xóa trong EmployeeDAO
                    JOptionPane.showMessageDialog(this, "Record deleted successfully.");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error deleting record from database: " + e.getMessage(),
                            "Delete Error", JOptionPane.ERROR_MESSAGE);
                }

                // Xóa dữ liệu trong các trường nhập liệu
                resetForm();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete!", "Delete Error",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bttnDeleteActionPerformed

    private void searchTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTFActionPerformed
        String searchID = searchTF.getText().trim();

        // Kiểm tra độ dài ID
        if (searchID.length() < 1 || searchID.length() > 6) {
            JOptionPane.showMessageDialog(this, "ID must be between 1 and 6 characters long.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!searchID.isEmpty() && !searchID.equals("Search")) {
            searchByID(searchID); // Gọi phương thức tìm kiếm với ID kiểu String
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a valid ID to search.", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchTFActionPerformed

    private void searchByID(String id) {
        // Xóa tất cả các hàng hiện tại trong bảng
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        try {
            EmployeeDAO xFile = new EmployeeDAO();
            ArrayList<Employee> list = xFile.readEmployees(); // Lấy danh sách nhân viên
            boolean found = false;

            for (Employee employee : list) {
                if (employee.getID().trim().equalsIgnoreCase(id.trim())) {
                    // Nếu tìm thấy ID, thêm vào bảng
                    Object[] rowData = {
                        employee.getID(),
                        employee.getFirstName(),
                        employee.getLastName(),
                        employee.getPhone(),
                        employee.getGender(),
                        new SimpleDateFormat("dd/MM/yyyy").format(employee.getDob()),
                        employee.getAddress(),
                        employee.getRole(), // Lấy tên Role đã có
                        employee.getPosition() // Lấy tên Position đã có
                    };
                    model.addRow(rowData);
                    found = true;
                    break; // Thoát khỏi vòng lặp nếu đã tìm thấy
                }
            }

            // Nếu không tìm thấy, hiển thị thông báo
            if (!found) {
                JOptionPane.showMessageDialog(this, "No employee found with ID: " + id, "Search Result", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void searchTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTFFocusGained
        // TODO add your handling code here:
        PlaceholderUtils.handleFocusedPlaceholder(searchTF, "Search");
    }//GEN-LAST:event_searchTFFocusGained

    private void searchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTFFocusLost
        // TODO add your handling code here:
        PlaceholderUtils.handleFocusedPlaceholder(searchTF, "Search");
    }//GEN-LAST:event_searchTFFocusLost

    private void searchTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTFKeyReleased
        // TODO add your handling code here:
        if (searchTF.getText().isEmpty()) {
            loadDataIntoTable(); // Gọi lại phương thức để tải lại dữ liệu vào bảng
        }
    }//GEN-LAST:event_searchTFKeyReleased

    private void totalAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_totalAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_totalAncestorAdded

    private void bttn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttn_importActionPerformed
//        // TODO add your handling code here:
//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xls", "xlsx"));
//        int result = fileChooser.showOpenDialog(null);
//
//        if (result == JFileChooser.APPROVE_OPTION) {
//            File file = fileChooser.getSelectedFile();
//            try {
//                importExcel(file);
//                JOptionPane.showMessageDialog(null, "Import thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);
//            } catch (Exception ex) {
//                ex.printStackTrace();
//                JOptionPane.showMessageDialog(null, "Import thất bại: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_bttn_importActionPerformed

    
    
    private void home_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout cl = (CardLayout) (jPanel3.getLayout());
        cl.show(jPanel3, "tab1");
    }

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout cl = (CardLayout) (jPanel3.getLayout());
        cl.show(jPanel3, "tab2");
    }

    private void salary_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        CardLayout cl = (CardLayout) (jPanel3.getLayout());
        cl.show(jPanel3, "tab3");
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
//        // TODO add your handling code here:
//        JFileChooser fileChooser = new JFileChooser();
//        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");
//        fileChooser.setFileFilter(filter);
//
//        // Hiển thị hộp thoại chọn tệp
//        int result = fileChooser.showOpenDialog(this);
//        if (result == JFileChooser.APPROVE_OPTION) {
//            // Lấy tệp đã chọn
//            File selectedFile = fileChooser.getSelectedFile();
//            try {
//                // Tạo ImageIcon từ tệp đã chọn
//                ImageIcon icon = new ImageIcon(selectedFile.getAbsolutePath());
//
//                // Tùy chọn: Thay đổi kích thước hình ảnh để vừa với JLabel
//                Image img = icon.getImage();
//                Image scaledImg = img.getScaledInstance(106, 106, Image.SCALE_SMOOTH); // Thay đổi kích thước theo ý
//                // muốn
////                lblImage.setIcon(new ImageIcon(scaledImg)); // Đặt hình ảnh đã thay đổi kích thước vào JLabel
//            } catch (Exception ex) {
//                JOptionPane.showMessageDialog(this, "Error loading image: " + ex.getMessage());
//            }
//        }
    }// GEN-LAST:event_jButton3ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        this.requestFocusInWindow();
    }// GEN-LAST:event_formWindowGainedFocus

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LoginForm lg = new LoginForm();
        lg.setVisible(true);
        this.dispose();
    }// GEN-LAST:event_jButton1ActionPerformed

    private void txt_s1FocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txt_s1FocusGained
        // TODO add your handling code here:
        if (txt_s1.getText().equals("Search")) {
            txt_s1.setText("");
            txt_s1.requestFocus();
            txt_s1.setForeground(Color.DARK_GRAY);
        }
    }// GEN-LAST:event_txt_s1FocusGained

    private void txt_s1FocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txt_s1FocusLost
        // TODO add your handling code here:
        if (txt_s1.getText().isEmpty()) {
            txt_s1.setForeground(Color.DARK_GRAY);
            txt_s1.setText("Search");

        }
    }// GEN-LAST:event_txt_s1FocusLost

    private void tbl_salaryMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tbl_salaryMouseClicked
//        // TODO add your handling code here:
//        int selectedRow = tbl_salary.getSelectedRow();
//        if (selectedRow >= 0) {
//            // Lấy dữ liệu từ hàng đã chọn
//            String id = tbl_salary.getValueAt(selectedRow, 0).toString(); // Giả sử ID ở cột 0
//            String first_name = tbl_salary.getValueAt(selectedRow, 1).toString(); // Giả sử tên đầu tiên ở cột 1
//            String last_name = tbl_salary.getValueAt(selectedRow, 2).toString(); // Giả sử tên cuối cùng ở cột 2
//            String salary = tbl_salary.getValueAt(selectedRow, 3).toString(); // Giả sử lương ở cột 3
//
//            // Điền dữ liệu vào các trường nhập liệu
//            idTF.setText(id);
//            firstnameTF.setText(first_name);
//            lastnameTF.setText(last_name);
//            baseSalaryTF.setText(salary);
//        }
    }// GEN-LAST:event_tbl_salaryMouseClicked

    private void txt_s1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_s1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String searchID = txt_s1.getText().trim(); // Lấy ID từ trường tìm kiếm
        if (!searchID.isEmpty() && !searchID.equals("Search")) {
            searchByID_1(searchID); // Gọi phương thức tìm kiếm
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a valid ID to search.", "Input Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_txt_s1ActionPerformed

    private void txt_s1KeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_s1KeyReleased
        // TODO add your handling code here:
//        if (txt_s1.getText().isEmpty()) {
//            loadSalaryIntoTable(); // Gọi lại phương thức để tải lại dữ liệu vào bảng
//        }
    }// GEN-LAST:event_txt_s1KeyReleased

    private void searchByID_1(String id) {
        // Xóa tất cả các hàng hiện tại trong bảng
//        DefaultTableModel model = (DefaultTableModel) tbl_salary.getModel();
//        model.setRowCount(0);
//
//        try {
//            // Gọi phương thức không tĩnh từ thể hiện của EmployeeDAO để lấy danh sách nhân viên
//            ArrayList<EmployeeSalary> list = xFile.readSalary(); // Giả sử bạn có phương thức loadData để lấy danh sách
//            // nhân viên
//            boolean found = false; // Biến để kiểm tra xem có tìm thấy không
//
//            for (EmployeeSalary salary : list) {
//                if (salary.getID().trim().equalsIgnoreCase(id.trim())) {
//                    // Nếu tìm thấy ID, thêm vào bảng
//                    Object[] rowData = {
//                        salary.getID(),
//                        salary.getFirstName(),
//                        salary.getLastName(),
//                        salary.getSalary()
//                    };
//                    model.addRow(rowData);
//                    found = true; // Đánh dấu là đã tìm thấy
//                    break;
//                }
//            }
//
//            // Nếu không tìm thấy, có thể hiển thị thông báo
//            if (!found) {
//                JOptionPane.showMessageDialog(this, "No employee found with ID: " + id, "Search Result",
//                        JOptionPane.INFORMATION_MESSAGE);
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error",
//                    JOptionPane.ERROR_MESSAGE);
//        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logout_button;
    private javax.swing.JButton add_button;
    private javax.swing.JTextField allowanceTF;
    private javax.swing.JTextField baseSalaryTF;
    private javax.swing.JButton bttnAdd;
    private javax.swing.JButton bttnClear;
    private javax.swing.JButton bttnDelete;
    private javax.swing.JButton bttnUpdate;
    private javax.swing.JButton bttn_import;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JComboBox<String> cbAddress;
    private javax.swing.JComboBox<String> cbGender;
    private javax.swing.JComboBox<String> cbPosition;
    private javax.swing.JComboBox<String> cbRole;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeMainBtn;
    private javax.swing.JTextField coefTF;
    private javax.swing.JTextField firstnameTF;
    private javax.swing.JTextField idTF;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lastnameTF;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField netSalaryTF;
    private javax.swing.JButton salary_button;
    private javax.swing.JTextField searchTF;
    private javax.swing.JTable tbl_salary;
    private javax.swing.JLabel total;
    private javax.swing.JLabel total_leader;
    private javax.swing.JLabel total_staff;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txt_s1;
    private javax.swing.JButton updateSalaryBtn;
    // End of variables declaration//GEN-END:variables
}
